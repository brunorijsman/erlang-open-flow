VERSION 1.0
===========

[Page 11] The spec if vague on what to do when a Hello message is received after connection startup (i.e. when the initial Hellos have already been exchanged)? Option 1: accept and ignore the message as long as the version matches the negotiated version; send an error is the version is wrong. Option 2: always send an error (HELLO_FAILED? BAD_REQUEST?)

[Page 16] What does the following sentence mean? "The final version for a Type 0 switch will be 0x00." What is a "Type 0 switch"? How does this relate to the current version 0x01?

[Page 16] It is not clear what xid must be set to for messages which are neither a request nor a reply. Can it be any random value?

[Page 32] Why does ofp_flow_stats have a Length field? It seems that it is not needed: the length of the ofp_flow_stats field can be derived from the length in the message header. What is "this entry" (i.e. what, exactly, is this the length of)? 

[Page 35] The value of OFPQ_ALL is not defined anywhere in the spec.

[Page 35] The specification is not very clean on the layout of the ofp_vendor_stats_request and ofp_vendor_stats_reply messages.

[Page 37] buffer_id should be set to -1 when the packet is not buffered, but buffer_id is unsigned (uint32_t). Should say "0xffffffff" instead.

VERSION 1.1
===========

[Page 25] Inconsistency: "OFP_MAX_ETH_ALEN is 6" -> "OFP_ETH_ALEN is 6"

[Page 28] Typo in struct ofp_queue_prop_header: "64-bit alignemnt" -> "64-bit alignment"

[General] Inconsistent naming for layer 2 addresses:
hw_addr => hw for hardware
OPT_ETH_ALEN => eth for ethernet
dl_src => dl for datalink

[Page 36] Why is the field called 'reserverd' (and not pad like everywhere else).

[Page 36] 8 bits for n_tables is not nearly enough; there are platforms which support 
many more than 256 tables.

[Page 37] Second reference for n_buffers is ??.

[Page 37] There is a paragraph discussion the actions field. However, the struct
ofp_switch_features does not have an actions field.

[Page 37] Change the comment next to flags from "OPC_* flags" to "OPC_FRAG_* or IPC_INVALID_* flags" - there are other unrelated constants which start with the OPC_ prefix (e.g. OPC_FLOW_STATS and other capabilities).


